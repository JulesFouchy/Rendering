"use strict";(self.webpackChunkrendering=self.webpackChunkrendering||[]).push([[7962],{8283:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var s=n(4848),t=n(8453);const r={title:"1 - Forces, Interpolation, Easing"},a=void 0,l={id:"Maths/Forces Interpolation Easing",title:"1 - Forces, Interpolation, Easing",description:"Setup initial",source:"@site/docs/Maths/1-Forces Interpolation Easing.md",sourceDirName:"Maths",slug:"/Maths/Forces Interpolation Easing",permalink:"/Rendering/Maths/Forces Interpolation Easing",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"1 - Forces, Interpolation, Easing"},sidebar:"Maths",previous:{title:"Intro",permalink:"/Rendering/Maths/Intro"}},c={},o=[{value:"Setup initial",id:"setup-initial",level:2},{value:"Forces",id:"forces",level:2},{value:"Dur\xe9e de vie",id:"dur\xe9e-de-vie",level:2},{value:"Interpolation au cours de la vie",id:"interpolation-au-cours-de-la-vie",level:2},{value:"Easing",id:"easing",level:2}];function d(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h2,{id:"setup-initial",children:"Setup initial"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Cr\xe9ez une struct ",(0,s.jsx)(i.code,{children:"Particle"}),", qui contiendra pour l'instant simplement une position choisie al\xe9atoirement (vous pouvez utiliser ",(0,s.jsx)(i.code,{children:"utils::rand(min, max)"}),")"]}),"\n"]}),"\n",(0,s.jsx)(i.admonition,{type:"tip",children:(0,s.jsxs)(i.p,{children:["Pour les vecteurs nous utilisons la librairie ",(0,s.jsx)(i.code,{children:"glm"}),", qui contient entre autre le type ",(0,s.jsx)(i.code,{children:"glm::vec2"}),". Les op\xe9rateurs ",(0,s.jsx)(i.code,{children:"+"}),", ",(0,s.jsx)(i.code,{children:"-"}),", ",(0,s.jsx)(i.code,{children:"*"})," marchent sur ces vecteurs, ainsi que diverses fonctions: ",(0,s.jsx)(i.code,{children:"glm::dot(v1, v2)"})," (produit scalaire), ",(0,s.jsx)(i.code,{children:"glm::length(v)"}),", etc."]})}),"\n",(0,s.jsx)(i.admonition,{type:"tip",children:(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["L'axe X va de gauche \xe0 droite, de ",(0,s.jsx)(i.code,{children:"-gl::window_aspect_ratio()"})," \xe0 ",(0,s.jsx)(i.code,{children:"+gl::window_aspect_ratio()"})]}),"\n",(0,s.jsxs)(i.li,{children:["L'axe Y va de bas en haut, de ",(0,s.jsx)(i.code,{children:"-1"})," \xe0 ",(0,s.jsx)(i.code,{children:"+1"})]}),"\n"]})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Cr\xe9ez un ",(0,s.jsx)(i.code,{children:"std::vector<Particle>"})," avec une centaine de particules"]}),"\n",(0,s.jsxs)(i.li,{children:["Affichez les gr\xe2ce \xe0 ",(0,s.jsx)(i.code,{children:"utils::draw_disk(position, radius, color)"})," (nous ferons varier le radius et la color plus tard, pour l'instant choisissez des valeurs hardcod\xe9es)"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:n(8880).A+"",width:"1920",height:"1028"})}),"\n",(0,s.jsx)(i.h2,{id:"forces",children:"Forces"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Rajoutez maintenant une ",(0,s.jsx)(i.strong,{children:"vitesse"})," \xe0 vos particules, initialis\xe9e avec un angle et une longueur al\xe9atoire (Tip: il va falloir faire de la trigo pour convertir cet angle et cette longueur en un vec2, aka convertir des coordonn\xe9es polaires en coordonn\xe9es cart\xe9siennes)"]}),"\n",(0,s.jsxs)(i.li,{children:["\xc0 chaque frame, appliquez cette vitesse \xe0 la position de vos particules pour les faire bouger (attention \xe0 bien prendre en compte le delta time ! ",(0,s.jsx)(i.code,{children:"gl::delta_time_in_seconds()"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:n(3556).A+"",width:"1905",height:"978"})}),"\n",(0,s.jsx)(i.p,{children:"Nous allons maintenant appliquer des forces \xe0 nos particules :"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Calculez une force de gravit\xe9 (un vecteur constant vers le bas, multipli\xe9 par la masse de la particule (il faut donc ajouter une ",(0,s.jsx)(i.code,{children:"mass"})," \xe0 votre particule))"]}),"\n",(0,s.jsx)(i.li,{children:"Calculez l'acc\xe9l\xe9ration, qui est \xe9gale \xe0 la somme des forces, divis\xe9e par la masse de la particule"}),"\n",(0,s.jsx)(i.li,{children:"Appliquez cette acc\xe9l\xe9ration \xe0 la vitesse (avant d'appliquer la vitesse \xe0 la position)"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:n(1059).A+"",width:"1905",height:"978"})}),"\n",(0,s.jsx)(i.p,{children:"Nous pouvons maintenant rajouter d'autre forces :"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"https://www.wikiwand.com/fr/articles/Frottement_fluide#%C3%80_faible_vitesse",children:"Frottements de l'air"}),' (on consid\xe9rera qu\'on est toujours dans le cas "\xe0 faible vitesse")\n',(0,s.jsx)(i.img,{src:n(4033).A+"",width:"1905",height:"978"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"https://www.techno-science.net/definition/6765.html",children:"Force de ressort"})," attach\xe9 \xe0 la position de la souris ",(0,s.jsx)(i.code,{children:"gl::mouse_position()"})," (autrement dit une force proportionnelle au vecteur qui va de la particule vers la souris)\n",(0,s.jsx)(i.img,{src:n(3580).A+"",width:"1905",height:"978"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.em,{children:"Pour aller plus loin"}),": force de vortex, qui fait tourner les particules en rond autour d'un certain point"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"dur\xe9e-de-vie",children:"Dur\xe9e de vie"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Rajoutez une dur\xe9e de vie \xe0 vos particules (initialis\xe9e al\xe9atoirement) et un \xe2ge qu'il faudra augmenter \xe0 chaque frame"}),"\n",(0,s.jsx)(i.li,{children:"D\xe8s que l'\xe2ge d'une particule d\xe9passe sa dur\xe9e de vie, supprimez-la"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:n(5798).A+"",width:"1905",height:"978"})}),"\n",(0,s.jsx)(i.h2,{id:"interpolation-au-cours-de-la-vie",children:"Interpolation au cours de la vie"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Diminuez le rayon de la particule en fonction de son \xe2ge, afin d'atteindre 0 quand elle meurt\n",(0,s.jsx)(i.img,{src:n(4121).A+"",width:"1905",height:"978"})]}),"\n",(0,s.jsxs)(i.li,{children:["Au lieu d'avoir le rayon qui diminue constamment, faites en sorte que ce soit seulement dans les deux derni\xe8res secondes de sa vie qu'il diminue (essayez de ne pas utiliser de ",(0,s.jsx)(i.code,{children:"if"})," ! Juste des fonctions math\xe9matiques et un min ou un max)\n",(0,s.jsx)(i.img,{src:n(2482).A+"",width:"1905",height:"978"})]}),"\n"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Choisissez une couleur de d\xe9but et une couleur de fin, et faites varier la couleur de la particule au cours de sa vie\n",(0,s.jsx)(i.img,{src:n(5400).A+"",width:"1905",height:"978"})]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"easing",children:"Easing"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Utilisez une ",(0,s.jsx)(i.a,{href:"https://www.tumblr.com/1ucasvb/44666043888/easing-functions-are-an-immensely-useful-tool-for",children:"fonction de easing"})," (par exemple un bounce) sur le radius de la particule pour la faire clignoter avant qu'elle meure\n",(0,s.jsx)(i.img,{src:n(3691).A+"",width:"1906",height:"979"})]}),"\n",(0,s.jsxs)(i.li,{children:["Utilisez une fonction de easing (par exemple power) pour adoucir le d\xe9but et la fin de l'animation de changement de couleur\n",(0,s.jsx)(i.img,{src:n(7333).A+"",width:"1905",height:"978"})]}),"\n"]})]})}function u(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},2482:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/2sec-113045102cb3b8ed0943554ef17079d6.gif"},3691:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/bounce-e9b6893769247836e520be6dd4c9ed89.gif"},5400:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/color-9759b80a00e46e4a156db5ca2fdd05ba.gif"},7333:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/color_ease-8ec8d32093c1bb6072ad6387a781a91e.gif"},4033:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/friction-da59d721833bb95759bd3ede05bf239c.gif"},1059:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/gravity-ec78ff97c27b303c453166bdcab91aa6.gif"},5798:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/lifetime-290f38927cd9fb72323b5ac96a04c2b8.gif"},3556:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/move-c3e4983b2b192bf4a24b750dcc1b0057.gif"},4121:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/radius-98388e8adff4f3d57c143aec86ddfa85.gif"},3580:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/spring-8259c881f7cfe6c5a5d1b001021043d8.gif"},8880:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/still-718b55b637f2ac6044298b28804a97fa.png"},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>l});var s=n(6540);const t={},r=s.createContext(t);function a(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);